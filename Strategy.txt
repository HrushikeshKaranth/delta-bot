step 1 -	first entry -> short straddle with calender

step 2 -	if price [goes up] form straddle then [sell put] of [above] strike and if the price [comes back] exit the [sold put]

step 3 -	if price [goes down] form straddle then [sell call] of [below] strike and if the price [comes back] exit the [sold put]

adjustments

- If the price keeps on going the we keep on selling in that direction and if the price reverses the we keep on exiting the sold contracts
_____________________________________


entryStrike - holds initial entry strike [straddle]
tradedStrike- holds currently sold strike
we update upStrike and downStrike on every entry we take
stack - to hold entries [latest entries will be exited first if price reverses]
stack.poll - will hold the latest entry
price goes up one strike we sell put
price goes down one strike we sell call

if price reverses down from strike we exit sold put
if price reverses up from strike we exit sold call




# Place new order
method = 'POST'
timestamp = get_time_stamp()
path = '/v2/orders'
query_string = ''
payload = "{\"order_type\":\"limit_order\",\"size\":3,\"side\":\"buy\",\"limit_price\":\"0.0005\",\"product_id\":16}"
signature_data = method + timestamp + path + query_string + payload
signature = generate_signature(api_secret, signature_data)

req_headers = {
  'api-key': api_key,
  'timestamp': timestamp,
  'signature': signature,
  'User-Agent': 'rest-client',
  'Content-Type': 'application/json'
}

response = requests.request(
    method, url, data=payload, params={}, timeout=(3, 27), headers=req_headers
)