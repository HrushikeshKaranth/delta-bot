step 1 -	first entry -> short straddle

step 2 -	if price [goes up] form straddle then [sell put] of [above] strike and if the price [comes back] exit the [sold put]

step 3 -	if price [goes down] form straddle then [sell call] of [below] strike and if the price [comes back] exit the [sold put]

adjustments
- If the price keeps on going the we keep on selling in that direction and if the price reverses then we keep on exiting the sold contracts
_____________________________________


entryStrike - holds initial entry strike [straddle]
tradedStrike- holds currently sold strike
we update upStrike and downStrike on every entry we take
stack - to hold entries [latest entries will be exited first if price reverses]
stack.poll - will hold the latest entry
price goes up one strike we sell put
price goes down one strike we sell call

if price reverses down from strike we exit sold put
if price reverses up from strike we exit sold call




# Place new order
method = 'POST'
timestamp = get_time_stamp()
path = '/v2/orders'
query_string = ''
payload = "{\"order_type\":\"limit_order\",\"size\":3,\"side\":\"buy\",\"limit_price\":\"0.0005\",\"product_id\":16}"
signature_data = method + timestamp + path + query_string + payload
signature = generate_signature(api_secret, signature_data)

req_headers = {
  'api-key': api_key,
  'timestamp': timestamp,
  'signature': signature,
  'User-Agent': 'rest-client',
  'Content-Type': 'application/json'
}

response = requests.request(
    method, url, data=payload, params={}, timeout=(3, 27), headers=req_headers
)




Example:
Initial Entry: EntryPrice = 1000. Short straddle created at 1000. we will not exit this trade, this keeps untouched
Price Up: At 1100, sell a put at 1100 and at 1200 sell put again, keep selling put at 100 points interval, Exit strikes when price reverses like this - from 1200 price reversed to 1100 then exit 1200 contract and from 1100 to 1000 the exit 1100 strike
Price Down: vice versa of Price Up